{"version":3,"sources":["file:///Users/jordiawang/Developer/cocos-3.x-demo/assets/Script/WolfRun/GlobalStore.ts"],"names":["GlobalStore","constructor","eventMap","data","gameStatus","setData","key","trigger","on","eventName","callback","push","off","length","index","findIndex","item","splice","eventData","forEach"],"mappings":";;;iBAEMA,W;;;;;;;;;;;AAAAA,MAAAA,W,GAAN,MAAMA,WAAN,CAAkB;AAShBC,QAAAA,WAAW,GAAG;AAAA,eARdC,QAQc;AAAA,eAJdC,IAIc;AACZ,eAAKD,QAAL,GAAgB,EAAhB;AAEA,eAAKC,IAAL,GAAY;AACVC,YAAAA,UAAU,EAAE,CADF,CACK;;AADL,WAAZ;AAGD;;AAEDC,QAAAA,OAAO,CAACC,GAAD,EAAcH,IAAd,EAAyB;AAC9B,eAAKA,IAAL,CAAUG,GAAV,IAAiBH,IAAjB;AAEA,eAAKI,OAAL,CAAa,YAAb,EAA2B;AACzBD,YAAAA,GADyB;AAEzBH,YAAAA;AAFyB,WAA3B;AAID;;AAEDK,QAAAA,EAAE,CAACC,SAAD,EAAoBC,QAApB,EAA6C;AAC7C,cAAI,CAAC,KAAKR,QAAL,CAAcO,SAAd,CAAL,EAA+B;AAC7B,iBAAKP,QAAL,CAAcO,SAAd,IAA2B,EAA3B;AACD;;AAED,eAAKP,QAAL,CAAcO,SAAd,EAAyBE,IAAzB,CAA8BD,QAA9B;AACD;;AAEDE,QAAAA,GAAG,CAACH,SAAD,EAAoBC,QAApB,EAA8B;AAC/B,cAAI,CAAC,KAAKR,QAAL,CAAcO,SAAd,CAAD,IAA6B,CAAC,KAAKP,QAAL,CAAcO,SAAd,EAAyBI,MAA3D,EAAmE;AACjE;AACD;;AACD,cAAMC,KAAK,GAAG,KAAKZ,QAAL,CAAcO,SAAd,EAAyBM,SAAzB,CAAmCC,IAAI,IAAIA,IAAI,KAAKN,QAApD,CAAd;AACA,eAAKR,QAAL,CAAcO,SAAd,EAAyBQ,MAAzB,CAAgCH,KAAhC,EAAuC,CAAvC;AACD;;AAEDP,QAAAA,OAAO,CAACE,SAAD,EAAoBS,SAApB,EAAqC;AAAA;;AAC1C,cAAI,+BAAKhB,QAAL,CAAcO,SAAd,4CAA0BI,MAA1B,IAAmC,CAAvC,EAA0C;AACxC,iBAAKX,QAAL,CAAcO,SAAd,EAAyBU,OAAzB,CAAkCT,QAAD,IAA6B;AAC5DA,cAAAA,QAAQ,CAACQ,SAAD,CAAR;AACD,aAFD;AAGD;AACF;;AAhDe,O;;yBAmDH,IAAIlB,WAAJ,E","sourcesContent":["type EventCallback = (evtData: any) => void;\n\nclass GlobalStore {\n  eventMap: {\n    [eventName: string]: Array<EventCallback>;\n  };\n\n  data: {\n    gameStatus: number;\n  };\n\n  constructor() {\n    this.eventMap = {};\n\n    this.data = {\n      gameStatus: 0, // 0-未开始 1-运行中 2-结束\n    };\n  }\n\n  setData(key: string, data: any) {\n    this.data[key] = data;\n\n    this.trigger('dataChange', {\n      key,\n      data,\n    });\n  }\n\n  on(eventName: string, callback: EventCallback) {\n    if (!this.eventMap[eventName]) {\n      this.eventMap[eventName] = [];\n    }\n\n    this.eventMap[eventName].push(callback);\n  }\n\n  off(eventName: string, callback) {\n    if (!this.eventMap[eventName] || !this.eventMap[eventName].length) {\n      return;\n    }\n    const index = this.eventMap[eventName].findIndex(item => item === callback);\n    this.eventMap[eventName].splice(index, 1);\n  }\n\n  trigger(eventName: string, eventData?: any) {\n    if (this.eventMap[eventName]?.length > 0) {\n      this.eventMap[eventName].forEach((callback: EventCallback) => {\n        callback(eventData);\n      });\n    }\n  }\n}\n\nexport default new GlobalStore();\n"]}